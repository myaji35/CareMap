// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Institution {
  id                String                @id @default(cuid())
  institutionCode   String                @unique
  name              String
  serviceType       String
  capacity          Int
  currentHeadcount  Int
  address           String
  latitude          Float
  longitude         Float
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt

  history           InstitutionHistory[]
}

model InstitutionHistory {
  id                String      @id @default(cuid())
  institutionId     String
  recordedDate      DateTime    @default(now())
  name              String
  address           String
  capacity          Int
  currentHeadcount  Int

  institution       Institution @relation(fields: [institutionId], references: [id], onDelete: Cascade)

  @@index([institutionId])
  @@index([recordedDate])
}

model Crawler {
  id                String         @id @default(cuid())
  name              String         // 크롤러 이름 (예: "장기요양기관 목록")
  url               String         // 크롤링 대상 URL
  description       String?        // 크롤러 설명
  isActive          Boolean        @default(true)  // 활성화 여부
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt

  jobs              CrawlerJob[]

  @@index([isActive])
}

model CrawlerJob {
  id                String      @id @default(cuid())
  crawlerId         String?     // 크롤러 ID (nullable for backward compatibility)
  status            String      // 'running', 'completed', 'failed'
  startedAt         DateTime    @default(now())
  completedAt       DateTime?
  totalPages        Int
  crawledCount      Int         @default(0)
  savedToDb         Boolean     @default(false)
  createdCount      Int         @default(0)
  updatedCount      Int         @default(0)
  failedCount       Int         @default(0)
  errorMessage      String?

  crawler           Crawler?    @relation(fields: [crawlerId], references: [id], onDelete: SetNull)

  @@index([startedAt])
  @@index([status])
  @@index([crawlerId])
}
